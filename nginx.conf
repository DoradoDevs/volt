server {
    listen 80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;

    # API proxy to backend - only specific API endpoints
    # POST /signup and POST /login are API endpoints
    # GET /dashboard, GET /auth/me, etc. are API endpoints
    # But GET /login, GET /signup, GET /dashboard as routes are React routes

    # Auth API endpoints
    location = /signup {
        if ($request_method = POST) {
            proxy_pass http://backend:5000;
        }
        try_files $uri /index.html;
    }

    location = /login {
        if ($request_method = POST) {
            proxy_pass http://backend:5000;
        }
        try_files $uri /index.html;
    }

    # All /auth/* endpoints go to backend
    location /auth/ {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Dashboard API endpoint (GET /dashboard for data)
    location = /dashboard {
        if ($request_method = GET) {
            # Check if it has Authorization header (API call vs browser navigation)
            set $is_api 0;
            if ($http_authorization) {
                set $is_api 1;
            }
            if ($is_api = 1) {
                proxy_pass http://backend:5000;
            }
            if ($is_api = 0) {
                rewrite ^ /index.html break;
            }
        }
    }

    # All other API endpoints
    location ~ ^/(settings|wallets|portfolio|referral|tier|funds|bot|activity|health) {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend routes - serve React app for all other routes
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
